#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Author: Florian LÃ¼ke <florianlueke@gmx.net>

from cx_Freeze import setup, Executable
from os.path import join as pjoin
import importlib
import os
import sys

CSD = '${CMAKE_CURRENT_SOURCE_DIR}'
CBD = '${CMAKE_CURRENT_BINARY_DIR}'

# Dependencies are automatically detected, but it might need
# fine tuning.

includes = list()
maybe_includes = ['scipy.sparse.csgraph._validation', 'scipy.special._ufuncs_cxx']

for mod in maybe_includes:
    try:
        importlib.import_module(mod)
        includes.append(mod)
    except ImportError:
        pass

include_files = list()
maybe_include_files = [
    # x86_64
    '/lib/x86_64-linux-gnu/libpng12.so.0',
    '/usr/lib/libblas.so.3',
    '/usr/lib/liblapack.so.3',
    '/usr/lib/x86_64-linux-gnu/libaudio.so.2',
    '/usr/lib/x86_64-linux-gnu/libgfortran.so.3',
    '/usr/lib/x86_64-linux-gnu/libQtAssistantClient.so.4', 
    '/usr/lib/x86_64-linux-gnu/libQtCLucene.so.4', 
    '/usr/lib/x86_64-linux-gnu/libQtCore.so.4', 
    '/usr/lib/x86_64-linux-gnu/libQtDBus.so.4', 
    '/usr/lib/x86_64-linux-gnu/libQtDeclarative.so.4', 
    '/usr/lib/x86_64-linux-gnu/libQtDesignerComponents.so.4', 
    '/usr/lib/x86_64-linux-gnu/libQtDesigner.so.4', 
    '/usr/lib/x86_64-linux-gnu/libQtGui.so.4', 
    '/usr/lib/x86_64-linux-gnu/libQtHelp.so.4', 
    '/usr/lib/x86_64-linux-gnu/libQtNetwork.so.4', 
    '/usr/lib/x86_64-linux-gnu/libQtScript.so.4', 
    '/usr/lib/x86_64-linux-gnu/libQtScriptTools.so.4', 
    '/usr/lib/x86_64-linux-gnu/libQtSql.so.4', 
    '/usr/lib/x86_64-linux-gnu/libQtSvg.so.4', 
    '/usr/lib/x86_64-linux-gnu/libQtTest.so.4', 
    '/usr/lib/x86_64-linux-gnu/libQtWebKit.so.4', 
    '/usr/lib/x86_64-linux-gnu/libQtXmlPatterns.so.4', 
    '/usr/lib/x86_64-linux-gnu/libQtXml.so.4', 

    # x86
    '/usr/lib/liblapack.so.3gf',
    '/usr/lib/libblas/libblas.so.3gf',
    '/usr/lib/i386-linux-gnu/libgfortran.so.3',
    ]

for fn in maybe_include_files:
    if os.path.exists(fn):
        tup = (fn, os.path.basename(fn))
        include_files.append(tup)

build_options = dict(
      packages = ['mesycontrol', 'mesycontrol.ui'],

      # Excluding the python 3 uic and matplotlib. I can't get the latter to
      # work and I am not sure if it's actually needed.
      # Tkinter is excluded to make the build work if $DISPLAY is not set.
      excludes = ['PyQt4.uic.port_v3', 'matplotlib', 'Tkinter'],

      includes = includes,

      include_files = include_files,

      zip_includes = [ (pjoin(CBD, 'mesycontrol/mc_version.py'), 'mesycontrol/mc_version.py') ],

      path = sys.path + [CSD],
      )

base_gui = 'Win32GUI' if sys.platform=='win32' else None

executables = [
    Executable(
        script=pjoin(CSD, 'mesycontrol_gui.py'),
        base=base_gui,
        initScript=pjoin(CSD, 'cxfreeze_init.py'),
        icon = pjoin(CSD, 'mesycontrol/resources/32x32.ico'),
        ),
]

version = '0.0' if sys.platform == 'win32' else '@GIT_VERSION@'

setup(name='@CMAKE_PROJECT_NAME@',
      version = version,
      description = 'mesycontrol',
      options = dict(build_exe = build_options),
      executables = executables,
      )
