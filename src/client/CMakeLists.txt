find_package(PythonInterp REQUIRED)

set(SETUP_PY_IN "${CMAKE_CURRENT_SOURCE_DIR}/setup.py.in")
set(SETUP_PY    "${CMAKE_CURRENT_BINARY_DIR}/setup.py")
set(STAMP       "${CMAKE_CURRENT_BINARY_DIR}/build/timestamp")

set(PYTHON_SOURCES
   "${CMAKE_CURRENT_SOURCE_DIR}/cxfreeze_ConsoleSetLibPath.py"
   "${CMAKE_CURRENT_SOURCE_DIR}/mesycontrol_cli.py"
   "${CMAKE_CURRENT_SOURCE_DIR}/mesycontrol/device_config.py"
   "${CMAKE_CURRENT_SOURCE_DIR}/mesycontrol/device_config_xml.py"
   "${CMAKE_CURRENT_SOURCE_DIR}/mesycontrol/device_description_mhv4.py"
   "${CMAKE_CURRENT_SOURCE_DIR}/mesycontrol/device_description.py"
   "${CMAKE_CURRENT_SOURCE_DIR}/mesycontrol_gui.py"
   "${CMAKE_CURRENT_SOURCE_DIR}/mesycontrol/__init__.py"
   "${CMAKE_CURRENT_SOURCE_DIR}/mesycontrol/protocol.py"
   "${SETUP_PY_IN}"
)

configure_file(${SETUP_PY_IN} ${SETUP_PY})

# Run the generated distutils setup.py script to build the binaries and install
# into the build directory.
add_custom_command(OUTPUT ${STAMP}
   COMMAND ${PYTHON_EXECUTABLE} ${SETUP_PY} install --prefix "${CMAKE_BINARY_DIR}/python"
   COMMAND ${CMAKE_COMMAND} -E touch ${STAMP}
   DEPENDS ${PYTHON_SOURCES})

add_custom_target(mesycontrol_clients ALL DEPENDS ${STAMP})

# Installation rules for the files generated by distutils.
install(DIRECTORY ${CMAKE_BINARY_DIR}/python/bin/ DESTINATION bin USE_SOURCE_PERMISSIONS)
install(DIRECTORY ${CMAKE_BINARY_DIR}/python/lib/ DESTINATION lib USE_SOURCE_PERMISSIONS
	PATTERN "*mesycontrol_cli"
       	PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ
	            GROUP_EXECUTE GROUP_READ
		    WORLD_EXECUTE WORLD_READ
	PATTERN "*mesycontrol_gui"
       	PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ
	            GROUP_EXECUTE GROUP_READ
		    WORLD_EXECUTE WORLD_READ)

# vim:tw=0
